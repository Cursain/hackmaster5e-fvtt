{"name":"Damage","type":"script","author":"YT3vyFbQDsF30XLi","img":"icons/skills/melee/strike-sword-%20blood-red.webp","scope":"global","command":"if (this.isObsolete(1, \"getDamage\")) return false;\nconst actor = this._hm_getActor();\nif (!actor) return;\n\nconst dialog  = \"dmg\";\nconst formula = \"@resp.dmg + @stats.dmg.derived.value + @resp.mod\";\nconst dataset = {dialog, formula};\nconst dialogResp = await this.dialogmgr.getDialog(actor, dataset);\nconst roll = await this.rollmgr.getRoll(dataset, dialogResp);\nconst card = await this.chatmgr.getCard(roll, dataset, dialogResp);\nawait ChatMessage.create(card);","folder":null,"sort":0,"permission":{"default":0,"YT3vyFbQDsF30XLi":3},"flags":{"core":{"sourceId":"Macro.whD23kXLYQeR6bbv"}},"_id":"ENZlBzTO3kLqz7KT"}
{"name":"Inflict Wound","type":"script","author":"YT3vyFbQDsF30XLi","img":"icons/skills/melee/blood-slash-foam-red.webp","scope":"global","command":"if (this.isObsolete(1, \"setWound\")) return false;\n\nconst actor = this._hm_getActor({allActors: true});\nif (!actor) return;\n\nconst dmg = await this.dialogmgr.getDialog(\"setWound\");\nif (dmg < 1) return;\n\nconst woundData = {hp: {value: dmg}, duration: {value: dmg}};\nconst data = {name: \"New Wound\", type: \"wound\", data: woundData};\n\nfor (let i=0; i < actor.length; i++) {\n    try {\n        await Item.create(data, {parent: actor[i]});\n    } catch (error) {\n        ui.notifications.warn(\"Unable to wound \" + actor[i].name + \".\");\n        console.error(error);\n        continue;\n    }\n    ui.notifications.info(\"<b>\" + actor[i].name + \"</b> receives <b>\" + dmg + \" HP</b> of damage.\");\n}","folder":null,"sort":0,"permission":{"default":0,"tCEmHegsCUF698n9":3,"YT3vyFbQDsF30XLi":3},"flags":{"core":{"sourceId":"Macro.XTeusTAXqqPY9MmB"}},"_id":"EwtmC2fl1xcK2BJV"}
{"name":"Attack","type":"script","author":"YT3vyFbQDsF30XLi","img":"icons/weapons/swords/greatsword-blue.webp","scope":"global","command":"if (this.isObsolete(1, \"getAttack\")) return false;\nconst actor = this._hm_getActor();\nif (!actor) return;\n\nconst dialog  = \"atk\";\nconst formula = \"1d20p + @stats.atk.derived.value + @resp.mod\";\nconst dataset = {dialog, formula};\nconst dialogResp = await this.dialogmgr.getDialog(actor, dataset);\nconst roll = await this.rollmgr.getRoll(dataset, dialogResp);\nconst card = await this.chatmgr.getCard(roll, dataset, dialogResp);\nawait ChatMessage.create(card);","folder":null,"sort":0,"permission":{"default":0,"YT3vyFbQDsF30XLi":3},"flags":{"core":{"sourceId":"Macro.1wYLnuQjAlZ5Io0E"}},"_id":"NvgdJpSrclLgMY4o"}
{"name":"Defend","type":"script","author":"YT3vyFbQDsF30XLi","img":"icons/equipment/shield/heater-crystal-blue.webp","scope":"global","command":"if (this.isObsolete(1, \"getDefend\")) return false;\nconst actor = this._hm_getActor();\nif (!actor) return;\n\nconst dialog  = \"def\";\nconst formula = \"1d20p + @stats.def.derived.value + @resp.mod\";\nconst dataset = {dialog, formula};\nconst dialogResp = await this.dialogmgr.getDialog(actor, dataset);\nconst roll = await this.rollmgr.getRoll(dataset, dialogResp);\nconst card = await this.chatmgr.getCard(roll, dataset, dialogResp);\nawait ChatMessage.create(card);","folder":null,"sort":0,"permission":{"default":0,"YT3vyFbQDsF30XLi":3},"flags":{"core":{"sourceId":"Macro.vxKYUkbgzS0OS31I"}},"_id":"x6u1zrik399P9U7c"}
